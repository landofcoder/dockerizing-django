version: '3'

services:
  djangoweb:
    restart: always
    build: ./web
    expose:
      - "8000"
    links:
      - dbdjango
      - redis
    volumes:
      - ./web-django:/usr/src/app
      - ./web-static:/usr/src/app/static
    env_file: .env
    environment:
      DEBUG: 'true'
    command: /usr/local/bin/gunicorn docker_django.wsgi:application -w 2 -b :8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.djangoweb.rule=Host(`django.localhost`)"
      - "traefik.http.routers.djangoweb.entrypoints=web"
      - "traefik.http.services.djangoweb.loadbalancer.server.port=8000"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - internal

  # nginx:
  #   restart: always
  #   build: ./nginx/
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - web-static:/www/static
  #   links:
  #     - web:web

  dbdjango:
    restart: always
    image: postgres:latest
    ports:
      - "5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data/
    networks:
      - internal

  redis:
    restart: always
    image: redis:latest
    ports:
      - 6379
    volumes:
      - redisdata:/data
    networks:
      - proxy
      - internal

  adminerdjango:
    image: adminer
    restart: always
    depends_on:
      - dbdjango
    ports:
      - 8080
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.adminerdjango.rule=Host(`adminerdjango.localhost`)"
      - "traefik.http.routers.adminerdjango.entrypoints=web"
      - "traefik.http.services.adminerdjango.loadbalancer.server.port=8080"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - internal

volumes:
  web-django:
  web-static:
  pgdata:
  redisdata:

networks:
  proxy:
    external:
      name: proxy
  internal:
    driver: bridge